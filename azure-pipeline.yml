trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '682b7d9e-5f11-47a7-9a0d-0d5698de54b6'
  
  # Web app name
  webAppName: 'react-nodejs-app'
  
  # Environment name
  environmentName: 'nodejs-cicd-16353'

  # Agent VM image name
  agentVMImageName: 'myPool'

stages:

- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      name: $(agentVMImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
      displayName: 'npm install and build - frontend'

    - task: DeleteFiles@1
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'node_modules'
      displayName: Delete node_modules
      
    - script: |
        npm install --omit=dev
      displayName: 'npm install - backend'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
        
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      name: $(agentVMImageName)
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure Web App Deploy: nodejs-cicd-16353'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              RuntimeStack: 'NODE|18-lts'
              packageForLinux: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              StartupCommand: 'npm run start'





